info: 
    version: '0.2.1'
components:
    schemas:
        # Information about the authentication status of the current user
        AuthInfo:
            type: object
            required:
                - userId
                - authenticated
            properties:
                userId:
                    $ref: '#/components/schemas/Id'
                authenticated:
                    type: boolean
                    default: false
        Id:
            type: string
            description: Database Ids
        # Information about a user
        User:
            type: object
            description: 'A user'
            properties:
                id:
                    $ref: '#/components/schemas/Id'
                    description: 'The ID of the user'
                firstName:
                    type: string
                    description: 'First name of the user'
                lastName:
                    type: string
                    description: 'Last name of the user'
                email:
                    type: string
                    description: 'Email of the user'
                dateOfBirth:
                    type: number
                    description: 'UNIX timestamp of when the user was born'
                friends:
                    type: array
                    items:
                        type: string
                    description: List of friend ids
                    default: []
                creationDate:
                    type: number
                    description: 'UNIX timestamp of when the user was created'
            required:
                - id
                - firstName
                - lastName
                - email
                - dateOfBirth
                - friends
                - creationDate
        Location:
            type: object
            required:
                - longitude
                - latitude
            properties:
                longitude:
                    type: float
                    description: 'Longitude of the location'
                latitude:
                    type: float
                    description: 'Latitude of the location'
                address:
                    type: string
                    description: 'Address of the location'
        EventMember:
            type: object
            required:
                - id
                - requiresCarpooling
            properties:
                id:
                    $ref: '#/components/schemas/Id'
                    description: 'Id if the event member'
                location:
                    $ref: '#/components/schemas/Location'
                    description: 'The location of the event member'
                requiresCarpooling:
                    type: boolean
                    default: false
                    description: 'If the member required carpooling to the event'
        Event:
            type: object
            required:
                - creatorId
                - id
                - members
                - title
                - description
                - startDateTime
                - endDateTime
                - creationDate
                - location
            properties:
                creatorId:
                    $ref: '#/components/schemas/Id'
                    description: 'Id of the user who created this event'
                id:
                    $ref: '#/components/schemas/Id'
                    description: 'Id of the event'
                members:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/EventMember'
                    description: 'Id of the users participating in this event'
                location:
                    $ref: '#/components/schemas/Location'
                    description: 'Location of the event'
                title:
                    type: string
                description:
                    type: string
                startDateTime:
                    type: integer
                    format: int32
                endDateTime:
                    type: integer
                    format: int32
                creationDate:
                    type: number
                    description: 'UNIX timestamp of when the event was created'
        EventCreationParameters:
            type: object
            required:
                - members
                - title
                - description
                - startDateTime
                - endDateTime
                - location
            properties:
                creatorId:
                    deprecated: true
                    $ref: '#/components/schemas/Id'
                    description: 'Id of the user who created this event'
                id:
                    deprecated: true
                    $ref: '#/components/schemas/Id'
                    description: 'Id of the event'
                members:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/EventMember'
                    description: 'Id of the users participating in this event'
                location:
                    $ref: '#/components/schemas/Location'
                    description: 'Location of the event'
                title:
                    type: string
                description:
                    type: string
                startDateTime:
                    type: integer
                    format: int32
                endDateTime:
                    type: integer
                    format: int32
                creationDate:
                    deprecated: true
                    type: number
                    description: 'UNIX timestamp of when the event was created'

